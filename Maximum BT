class Solution {
public:
    int findIndex(vector<int>& nums,int i,int n)
    {
        int maxi=INT_MIN;
        for(int j=i;j<=n;j++){
           if(nums[j]>maxi){
            maxi=nums[j];
           }
        }

        for(int j=i;j<=n;j++){
            if(nums[j]==maxi){
                return j;
            }
        }
        return -1;
    }
    TreeNode* solve(vector<int>& nums,int i,int n)
    {
        if(i>n){
            return NULL;
        }
        int ind=findIndex(nums,i,n);
        TreeNode* root=new TreeNode(nums[ind]);
        root->left=solve(nums,i,ind-1);
        root->right=solve(nums,ind+1,n);

        return root;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return solve(nums,0,nums.size()-1);
    }
};
