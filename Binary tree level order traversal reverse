class Solution {
public:
    void solve(TreeNode* root,vector<int>a,vector<vector<int>>&ans)
    {
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        while(!q.empty())
        {
            TreeNode* temp=q.front();
            q.pop();
            if(temp==NULL){
                if(a.size()!=0)
                {
                    ans.push_back(a);
                    a.clear();
                    q.push(NULL);
                }
            }
            else{
                a.push_back(temp->val);
                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                }
            }
        }
    }
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>>ans;
        vector<int>a;
        solve(root,a,ans);
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
