class Solution {
public:
    void solve(TreeNode* root,vector<vector<int>>&ans,vector<int>a,int d)
    {
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        while(!q.empty())
        {
           TreeNode* temp=q.front();
           q.pop();
           if(temp==NULL){
              if(a.size()!=0)
              {
                 if(d==-1){
                    reverse(a.begin(),a.end());
                    ans.push_back(a);
                 }
                 else{
                    ans.push_back(a);
                 }
                 a.clear();
                 q.push(NULL);
              }
              d=(d==1)?-1:1;
           }
           else{
              a.push_back(temp->val);
              if(temp->left){
                q.push(temp->left);
              }
              if(temp->right){
                q.push(temp->right);
              }
           }
        }
    }
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
         vector<vector<int>>ans;
         vector<int>a;
         solve(root,ans,a,1);
         return ans;
    } 
};
